# Позиционное присвоение. Если добавить 4 элемент, не меняя перавую сторону, то получим ошибку -
# - Too many values too unpack
a, b, c = 'string', 20, 3.14

# Используем функцию * - Unpack
n1, *n2, n3 = 'string', 15, 3.14, 'Text', 34 # n1 = 'string', n3 = 34, n2 = весь остаток
# то есть там6 где ставим *, туда записываются оставшиеся значения
print(n1,n2,n3)

# Еще один пример
*a, b, c = 'Unpacking'
print(a) # = ['U', 'n', 'p', 'a', 'c', 'k', 'i']
print(b) # = n
print(c) # = g

# Практическое применение *
s = [1,6]
print(list(range(*s))) # распаковываем список. В функцию передается 2 распакованных значения

# Практический пример 2
some_data = ('Hello', True, 78, [3,4,5])

def func(a1, b1, c1, d1):
    print(a1, b1, c1, d1)

func(*some_data) # Распаковывает элементы по соответсвующим элементам

# Функция считывания налогов от всех транзакций, переданных списком
def to_sum(*args): # *args - условная переменная, которая может принять в себя неограниченное число переменных
    print(sum(args)*0.06)
to_sum(23, 234234.23423, 4234.234, 934, 24)

# **kwargs - Записывает переданные переменные в словарь
def func1(**kwargs):
    print(kwargs)
func1(a =1, b = 2, c = 3) # {'a': 1, 'b': 2, 'c': 3}